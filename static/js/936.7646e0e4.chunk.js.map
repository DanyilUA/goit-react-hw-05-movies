{"version":3,"file":"static/js/936.7646e0e4.chunk.js","mappings":"yMACA,EAAqE,6BAArE,EAAqH,mCAArH,EAAkL,0CAAlL,EAAgP,oC,iBCuChP,MApCA,SAAkBA,GAAgB,IAAbC,EAAQD,EAARC,SACnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAQF,EAAaG,IAAI,UAAY,GAc3C,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAgBX,SAbd,SAAAY,GACnBA,EAAIC,iBACJb,EAASO,EACX,EAU0DO,SAAA,EACtDC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASN,UAAWC,EAAqBG,UACpDC,EAAAA,EAAAA,KAAA,QAAML,UAAWC,EAA4BG,SAAC,cAGhDC,EAAAA,EAAAA,KAAA,SACEL,UAAWC,EACXK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,YACLC,YAAY,gBACZC,MAAOd,GAAS,GAChBe,SArBkB,SAAAV,GACxB,IAAMW,EAAaX,EAAIY,OAAOH,MAE9Bf,EADkC,KAAfiB,EAAoB,CAAEhB,MAAOgB,GAAe,CAAC,EAElE,MAqBA,ECnBA,EAjBuB,SAAHxB,GAAqC,IAA/B0B,EAAa1B,EAAb0B,cAAeC,EAAQ3B,EAAR2B,SACrC,OACIX,EAAAA,EAAAA,KAAA,MAAAD,SACGW,GACCA,EAAcE,KAAI,SAAAC,GAChB,OACEb,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAML,GAAYM,GAAE,WAAAC,OAAaL,EAAKM,IAAKpB,SACvDc,EAAKO,OAASP,EAAKT,QAFfS,EAAKM,GAMlB,KAGZ,E,SCAA,MAbA,SAA0BE,GACxB,OAAOC,EAAAA,EAAAA,IACA,mDAADJ,OACiDG,EAAO,iCAAAH,OALhD,qCAQXK,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACLA,EAASG,IAClB,IACCC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,EAAM,GACtC,E,SCgBA,EAzBe,WACX,IAAMlB,GAAWmB,EAAAA,EAAAA,MACjBC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAA5C,EAAAA,EAAAA,GAAA0C,EAAA,GAA/CrB,EAAauB,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,GAA0BH,EAAAA,EAAAA,UAAS,IAAGI,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAA/B3C,EAAK4C,EAAA,GAAEC,EAAQD,EAAA,GAcxB,OAbAX,QAAQC,IAAI,kCAAmClC,IAG7C8C,EAAAA,EAAAA,YAAU,WACNb,QAAQC,IAAI,8BAA+BlC,GACxCA,GACF+C,EAAiB/C,GAAO+B,MAAK,SAAAI,GAC3BO,EAAiBP,EAAKa,QACxB,IAEDf,QAAQC,IAAI,QAASlC,EACzB,GAAG,CAACA,KAGJE,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAA1C,SAAA,EACEC,EAAAA,EAAAA,KAAC0C,EAAS,CAACzD,SAAUoD,EAAUM,aAAcnD,KAC7CQ,EAAAA,EAAAA,KAAC4C,EAAc,CAACjC,SAAUA,EAAUD,cAAeA,MAGzD,C","sources":["webpack://react-homework-template/./src/components/SearchBox/SerchBox.module.css?8cc7","components/SearchBox/SearchBox.jsx","components/SearchedMovies/SearchedMovies.jsx","helpers/fetchMovieSearh.js","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchBar\":\"SerchBox_searchBar__2fJi2\",\"searchForm\":\"SerchBox_searchForm__1EDhV\",\"searchFormButton\":\"SerchBox_searchFormButton__EdtiF\",\"searchForm_button_label\":\"SerchBox_searchForm_button_label__qb6fP\",\"searchForm__input\":\"SerchBox_searchForm__input__o3NNe\"};","import css from './SerchBox.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\n\nfunction SearchBox({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(query);\n  };\n\nconst updateQueryString = evt => {\n  const inputValue = evt.target.value;\n  const nextParams = inputValue !== '' ? { query: inputValue } : {};\n  setSearchParams(nextParams);\n};\n\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <button type=\"submit\" className={css.searchFormButton}>\n        <span className={css.searchForm_button_label}>Search</span>\n      </button>\n\n      <input\n        className={css.searchForm__input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        name=\"imageName\"\n        placeholder=\"Search movies\"\n        value={query || ''}\n        onChange={updateQueryString}\n      />\n    </form>\n  );\n};\n\nexport default SearchBox;\n\n\n","import { Link } from 'react-router-dom';\n\nconst SearchedMovies = ({ searchedFilms, location }) => {\n    return (\n        <ul>\n          {searchedFilms &&\n            searchedFilms.map(film => {\n              return (\n                <li key={film.id}>\n                  <Link state={{ from: location }} to={`/movies/${film.id}`}>\n                    {film.title || film.name}\n                  </Link>\n                </li>\n              );\n            })}\n            </ul>\n    );\n}\n\nexport default SearchedMovies;","import axios from 'axios';\n\nconst API_KEY = '0561c0caa6894fc9c35e7bf8e6e31140';\n\nfunction fetchMovieSearch(request) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?query=${request}&include_adult=false&api_key=${API_KEY}`\n    )\n\n    .then(response => {\n      console.log(response);\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\nexport default fetchMovieSearch;\n\n\n\n\n","import { useState, useEffect } from \"react\";\nimport SearchBox from \"../components/SearchBox/SearchBox\";\nimport SearchedMovies from \"components/SearchedMovies/SearchedMovies\";\nimport fetchMovieSearch from \"helpers/fetchMovieSearh\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Movies = () => {\n    const location = useLocation();\n    const [searchedFilms, setSearchedFilms] = useState([]);\n    const [query, setQuery] = useState('');\n  console.log('useEffect triggered with query:', query);\n\n\n    useEffect(() => {\n        console.log('Fetching movies with query:', query);\n       if (query) {\n         fetchMovieSearch(query).then(data => {\n           setSearchedFilms(data.results);\n         });\n       }\n        console.log('query', query);\n    }, [query]);\n\n  return (\n    <>\n      <SearchBox onSubmit={setQuery} currentQuery={query} />\n      <SearchedMovies location={location} searchedFilms={searchedFilms} />\n    </>\n  );\n}\n\nexport default Movies;"],"names":["_ref","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_jsxs","className","css","evt","preventDefault","children","_jsx","type","autoComplete","autoFocus","name","placeholder","value","onChange","inputValue","target","searchedFilms","location","map","film","Link","state","from","to","concat","id","title","request","axios","then","response","console","log","data","catch","error","useLocation","_useState","useState","_useState2","setSearchedFilms","_useState3","_useState4","setQuery","useEffect","fetchMovieSearch","results","_Fragment","SearchBox","currentQuery","SearchedMovies"],"sourceRoot":""}