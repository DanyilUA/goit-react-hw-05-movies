{"version":3,"file":"static/js/320.174496c2.chunk.js","mappings":"yMAmBA,MAfA,SAAsBA,GACpB,OAAOC,EAAAA,EAAAA,IACA,sCAADC,OACoCF,EAAQ,qBAAAE,OALpC,qCAQXC,MAAK,SAAAC,GACJ,OAAOA,EAASC,IAClB,IACCC,OAAM,SAAAC,GAEL,MADAC,QAAQD,MAAM,eAAgBA,GACxBA,CACR,GACJ,E,2BC2BA,MAxCA,WAEA,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACJE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAkB1B,OAhBAI,EAAAA,EAAAA,YAAU,WACRC,EAAaT,GACVN,MAAK,SAAAE,GACwB,IAAxBA,EAAKc,QAAQC,OACfZ,QAAQD,MAAM,qBAEdS,EAAWX,EAAKc,SAChBX,QAAQa,IAAIN,GAEhB,IACCT,OAAM,SAAAC,GAEL,MADAC,QAAQD,MAAM,YAAaA,GACrBA,CACR,GACJ,GAAG,CAACE,EAASM,KAGXO,EAAAA,EAAAA,MAAA,WAAAC,SAAA,CACsB,IAAnBR,EAAQK,SACPI,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6CAEJR,GACCA,EAAQU,KAAI,SAAAC,GAAM,OACdF,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WAASG,EAAOC,WACnBH,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAOE,cAHNF,EAAOG,GAKX,MAKnB,C","sources":["helpers/fetchReviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0561c0caa6894fc9c35e7bf8e6e31140';\n\nfunction fetchReviews(movie_id) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    )\n\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.error('Fetch Error:', error);\n      throw error;\n    });\n}\n\nexport default fetchReviews;\n","import fetchReviews from \"helpers/fetchReviews\";\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\n\nfunction Reviews() {\n\nconst { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n      fetchReviews(movieId)\n        .then(data => {\n          if (data.results.length === 0) {\n            console.error('no reviews found');\n          } else {\n            setReviews(data.results);\n            console.log(reviews);\n          }\n        })\n        .catch(error => {\n          console.error('new error', error);\n          throw error;\n        });\n    }, [movieId, reviews]);\n\n    return (\n      <section>\n        {reviews.length === 0 && (\n          <p>We don`t have reviews for this movie yet</p>\n        )}\n        {reviews &&\n          reviews.map(review => (\n              <ul key={review.id}>\n                <li>\n                  <p>Author: {review.author}</p>\n                  <p>{review.content}</p>\n                </li>\n              </ul>\n          ))}\n      </section>\n    );\n    \n}\n\nexport default Reviews;\n\n"],"names":["movie_id","axios","concat","then","response","data","catch","error","console","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","results","length","log","_jsxs","children","_jsx","map","review","author","content","id"],"sourceRoot":""}